                                  scala
  一.scala简介
      1.什么是scala
        scala是一种多范式的编程语言,其设计的初衷就是要集成面向对象编程和函数式编程的各种特性.scala运行于java平台,并兼容现有的java程序.
      2.scala的特点
        1)优雅
        2)速度快   scala语言表达能力强,一行代码可抵多行java代码,程序爱发速度快此外scala是静态编程的所以跟Jruby,groovy比起来要快很多
        3)能融入hadoop生态圈 :hadoop现在是大数据事实标准,spark并不是要取代hadoop而是要去完善hadoop生态.
      3.开发环境安装
        1)安装前提:由于scala运行在jvm所以在安装scala之前需要安装jdk(现阶段使用的jdk时1.8+版本)[编程类软件在公司使用时一般不会使用最新版,原因是最新版在刚刚发布时会有未知的安全,兼容等问题不利于后期维护,一般安装的版本是比最新版低1~2个版本]
        2)安装scala sdk(该软件安装和jdk安装类似,过程略)
        3)安装idea :scala现阶段最好用的集成开发化境除此之外还有eclipse等(选择其中之一安装即可)
        4)安装与集成开发环境相匹配的scala插件可以在线安装也可离线安装(离线安装需提前下载离线插件包)
        5)使用安装好的集成开发环境创建scala工程
      4.scala基本语法（本段代码见表达式详见scala程序实例总结.scala）
        1)函数式编程体验WordCount（spark-shell窗口书写代码）
          Wordcount计算表达式详见scala程序实例总结.scala
        2）scala交互模式（Windows：cmd|linux：终端）
        3）scala和Java一样有7种基本数据类型：Byte，Char，Short，Int，Long，Float，Double（基本数据类型是无包装类型）。此外scala还有Boolean,Unit类型 (unit和其他语言的void用法一样不过unit的值为())
        4)变量定义
            定义变量时使用var|val关键字
            语法格式:
              var|val 变量名(: 数据类型)[数据类型可以省略不写由结果编译器自动识别] = 变量值
              var定义的变量可以随意赋值,val定义的变量的值不能修改但是class块中被继承后可以修改
        5)字符串格式化输出
          文件'f'插值器允许创建一个格式化的字符串,类似于C语言中的printf   %s表示引用的值为string
          's'允许直接使用变量在使用变量说着对象的属性时${}引用
        6)条件表达式
        7）循环语句/yeild关键字
          在scala中的循环语句主要是for语句，while语句使用较少。
          语法结构
            for （i<- 表达式|数组|集合）
        8）运算符|运算符重载
          scala中的四则运算符的作用与Java中的一样，位运算符的作用也一样，只是有一点特别的：这些操作符实际上是方法。
        9）方法的定义及调用
          def 方法名(参数类表[参数变量名:参数值类型]):方法返回值类型 ={方法体}[只有一行时{}可省略]
          方法的返回值可以不写，让编译器自己退镀难出来。递归函数除外。递归函数的返回值必须定义!! 此外方法可以转换成函数:方法名 _
        10)函数的定义及调用
          a.val 接纳函数的变量的变量名(可以当做是函数名)=(函数的参数:参数的类型)=>{函数体}
          b.val 军函数的变量量的变量名(可以看做是函数名):(函数参数值类型列表) =>函数返回值类型=(函数参数列表)=>{函数体}
          函数的参数可以没有
        11)传值调用和传名调用
          通常来说函数的参数是传值参数.也就是说,参数的值在传递个函数之前确定.
          在scala中,方法或函数的参数可以是一段逻辑这也就引出了函数的传值调用与传名调用.
          传值调用的实质是将函数的返回值作为参数传入方法中执行逻辑
          传名调用的实质是将函数的逻辑作为参数传入方法中执行逻辑.
        12)可变参数函数:定义时参数只占一个参数位,但实际传参时可以输入任意个参数的函数
        13)默认参数值函数:在定义时给参数赋予默认值,传参时如果该参数位的参数为传入则使用该默认值
        14)高阶函数:将其他函数作为参数或者其结果位函数的函数
        15)部分参数应用函数
          如果函数传递所有语气的参数,日表示已完全应用它.如果只传递几个参数并不是全部参数,那么返回部分应用的函数.这样就可以方便的 绑定一些参数,其余的参数可稍后填写补上.
        16)柯里化:指的是将原来接受两个参数的函数转变为新的接受一个参数的函数的过程.新的函数返回一个医院有第二个参数为参数的函数.
        17)偏函数
          被包在{}内没有match的一组case语句就是一个偏函数,它时PartialFunction[A,B]的一个实例,A代表参数类型,B代表返回值类型,常用作输入模式匹配.
        18)数组定义(默认定义的数组为Array数组)
          数组定义时默认定义的数组是长度固定的数组其长度不可变,内容可变默认定义的数组.内容可变.
        19)map|flatten|flatmap|foreach的使用
          map将array数组生成某张映射输入参数时一个匿名函数
          flatten是进行扁平化操作(将两个嵌套的数组转换为一个数组的操作)
          flatmap是先进性map操作在进行flatten操作
          foreach是对数组中的元素进行遍历,遍历打印时println无传入参数
      5.集合
        集合分为三大类:1.序列Seq 2.集Set 3.映射Map
        集合的定义类包:mutable(可变集合包)ArrayBuffer内容长度均可变
                    immutable(不可变集合包)
        定义上述两类的集合时在定义集合之前需要现将包导入否则会报错.
        1.定长数组和变长数组(数组的长度是否可变)
        2.序列
          序列要么为空要么是一个head+一个tail列表
        3.集
        4.映射
        5.元组
        6.集合常用的方法
          map|flatten|flatmap|sorted|sortBy|sortWith|grouped|flod,flodLeft,flodRight|reduce,reduceLeft,aggregate|union|head|tail|foreach|lenght.
        7.并行化集合par
          调用集合的par方法,会降级和装换成并行化集合.
        8.Map和Option
          在Scala中Option类型样例类用来表示可能不存在的值(Option的子类有some和none).some包装了某个值,none表示没有值.
        9.Scala中的WordCount
          
