scala
数据类型    7个基本数据char ,int, byte boolean ,unit
long short flout double
定义变量用var或者val关键字
var定义变量时变量的数据类型可以自动识别    var age ：Int“a”
其中发生了隐式转换
val定义的变量的值一旦确定不可更改相当于java中的finnal

var/val 变量名: 变量的数据类型 = 变量值
var/val定义的变量必须有值，如果没有会报错  unit的值为() Unit相当于java中的void关键字
字符串的格式化输出：
  在println中数据间可用,隔开+可以拼接字符窜   使用，隔开时结果会用在（）中
  在printf输出时结果不会换行
  println（f   ）可以用于动态传参输出f为插值器
  s允许动态传参
  调用对象的属性时使用${对象.属性}
  ${对象.属性} 是个表达式不是值
scala中if的最后一行为返回值
在scala中若无else而if不满足则返回()    当if..else..只一行时可以不写{}否则必须写

for循环

for(x<= 0 to 5){}
for(x<= 0 util 5){}
上述两个的区别0 to 5表示0~5(包含0,5)    0 util 5(包含0不包含5)


scala 定义方法
  def定义方法
    定时的框架：def 方法名(参数:参数类型):返回值类型={方法体}   //:返回值类型可省略省略时按方法体中的后一行的结果的类型作为返回值类型
    方法定义时若无参数则()可写可不写只是在调用时定义中未加()的方法不可加() 否则会报错.
   方法名 _可将方法转换为函数 在命令行中使用该方法后会出现<function1>类字段   function表示方法1表示参数可数其值随参数个数而改变
  函数的定义
    val 函数名=(函数参数类表)=>函数体
    val 函数名:(参数值类型列表)=>返回值类型=(参数列表)=>函数体
  函数和方法再定以后除参数和返回值外一般不会在发生其他变化(不包含函数重写/重载).
  <赋值语句在scala中是无返回值类型>
  函数可以作为参数传入大方法中传值调用是将函数的值作为参数进行调用不管在调用的方法内部运算多少次该值不变.
  传名调用是将整个函数调用,在方法中调用时每调用一次就执行一次该函数的相关操作.
